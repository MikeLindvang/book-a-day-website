---
alwaysApply: true
---

# Accessibility Standards

Universal accessibility principles that apply to both public sales pages and admin panels. **WCAG AA compliance is mandatory** for all components and pages.

## Core Accessibility Principles

### ♿ Universal Access
- **Semantic HTML** as the foundation for all components
- **Keyboard navigation** support for all interactive elements
- **Screen reader compatibility** with proper ARIA labeling
- **Color contrast compliance** meeting WCAG AA standards (4.5:1 for normal text, 3:1 for large text)

### 🎯 Progressive Enhancement
- **Content-first approach** - all content accessible without JavaScript
- **Graceful degradation** when assistive technologies are limited
- **Multiple interaction methods** (mouse, keyboard, touch, voice)
- **User preference respect** (reduced motion, high contrast, etc.)

## Color & Contrast Standards

### Mandatory Contrast Ratios
```css
/* Text contrast examples meeting WCAG AA */
.text-on-light {
  background: #ffffff;
  color: #333333; /* 12.6:1 ratio - exceeds requirements */
}

.text-on-dark {
  background: #2d3748;
  color: #ffffff; /* 12.0:1 ratio - exceeds requirements */
}

.text-on-primary {
  background: #3a7ca5;
  color: #ffffff; /* 4.6:1 ratio - meets AA standard */
}

.text-on-accent {
  background: #e63946;
  color: #ffffff; /* 5.2:1 ratio - meets AA standard */
}

/* Large text can use lower contrast */
.large-text {
  font-size: 1.5rem;
  background: #6495ed;
  color: #ffffff; /* 3.8:1 ratio - meets AA for large text */
}
```

### Color-Blind Considerations
```css
/* Never rely on color alone for meaning */
.status-success {
  background: var(--success);
  color: white;
}

.status-success::before {
  content: "✓ ";
  font-weight: bold;
}

.status-error {
  background: var(--danger);
  color: white;
}

.status-error::before {
  content: "✗ ";
  font-weight: bold;
}

.status-warning {
  background: var(--warning);
  color: var(--gray-900);
}

.status-warning::before {
  content: "⚠ ";
  font-weight: bold;
}

/* Use patterns and textures alongside color */
.chart-bar.category-a {
  background: var(--primary);
  background-image: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 2px,
    rgba(255,255,255,.1) 2px,
    rgba(255,255,255,.1) 4px
  );
}
```

## Focus Management

### Visible Focus Indicators
```css
/* Universal focus styles */
.focusable {
  outline: none; /* Remove default */
  position: relative;
}

.focusable:focus-visible {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
  border-radius: var(--radius-md);
}

/* Enhanced focus for specific elements */
.button:focus-visible {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
  box-shadow: 0 0 0 4px rgba(58, 124, 165, 0.2);
}

.form-input:focus-visible {
  outline: 2px solid var(--primary);
  outline-offset: -2px;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(58, 124, 165, 0.1);
}

.card:focus-visible {
  outline: 2px solid var(--primary);
  outline-offset: 4px;
  box-shadow: var(--shadow-lg);
}

/* Remove focus for mouse users (but keep for keyboard) */
.focusable:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
```

### Skip Links
```css
.skip-links {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 9999;
}

.skip-link {
  position: absolute;
  top: -40px;
  left: var(--space-2);
  background: var(--primary);
  color: white;
  padding: var(--space-2) var(--space-4);
  text-decoration: none;
  border-radius: var(--radius-md);
  font-weight: 600;
  transition: top var(--transition-fast);
  font-size: var(--text-sm);
}

.skip-link:focus {
  top: var(--space-2);
  outline: 2px solid white;
  outline-offset: 2px;
}
```

### Focus Trapping (for modals)
```css
.focus-trap {
  position: relative;
}

/* Ensure modal backdrop doesn't interfere with focus */
.modal-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  z-index: 1000;
}

.modal-content {
  position: relative;
  z-index: 1001;
  background: var(--white);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-2xl);
  max-width: 90vw;
  max-height: 90vh;
  overflow-y: auto;
}

/* Focus should remain within modal */
.modal-content:focus {
  outline: none;
}
```

## Semantic HTML & ARIA

### Proper Heading Hierarchy
```html
<!-- Always maintain logical heading order -->
<!-- ✅ Correct hierarchy -->
<h1>Page Title</h1>
  <h2>Main Section</h2>
    <h3>Subsection</h3>
    <h3>Another Subsection</h3>
  <h2>Next Main Section</h2>
    <h3>Subsection</h3>

<!-- ❌ Never skip heading levels -->
<h1>Page Title</h1>
  <h3>This skips h2</h3> <!-- Wrong! -->
```

### ARIA Labels & Descriptions
```css
/* Style elements with proper ARIA support */
.expandable-section[aria-expanded="true"] .expand-icon {
  transform: rotate(180deg);
}

.toggle-button[aria-pressed="true"] {
  background: var(--primary);
  color: white;
}

.loading-spinner[aria-hidden="true"] {
  display: none;
}

/* Visually hidden content for screen readers */
.sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}
```

### Landmark Roles
```css
/* Style landmark elements appropriately */
main {
  min-height: 60vh;
  padding: var(--space-8) 0;
}

nav {
  border-bottom: 1px solid var(--gray-200);
  background: var(--white);
}

aside {
  background: var(--gray-50);
  border: 1px solid var(--gray-200);
  border-radius: var(--radius-lg);
  padding: var(--space-6);
}

footer {
  border-top: 1px solid var(--gray-200);
  background: var(--gray-50);
  margin-top: var(--space-16);
  padding: var(--space-8) 0;
}

/* Ensure landmarks are properly identified */
.navigation-landmark::before {
  content: "Navigation";
  position: absolute;
  left: -10000px;
  width: 1px;
  height: 1px;
  overflow: hidden;
}
```

## Keyboard Navigation

### Tab Order Management
```css
/* Ensure logical tab order */
.interactive {
  cursor: pointer;
  /* tabindex="0" in HTML for keyboard access */
}

.interactive:disabled {
  cursor: not-allowed;
  opacity: 0.6;
  /* tabindex="-1" in HTML to remove from tab order */
}

/* Custom tab order when needed */
.modal-overlay {
  /* tabindex="-1" to prevent focus */
  pointer-events: none;
}

.modal-content {
  /* tabindex="0" to allow focus */
  pointer-events: auto;
}
```

### Keyboard Shortcuts
```css
/* Style keyboard shortcut indicators */
.keyboard-shortcut {
  display: inline-flex;
  align-items: center;
  gap: var(--space-1);
}

.key {
  display: inline-block;
  padding: var(--space-1) var(--space-2);
  background: var(--gray-100);
  border: 1px solid var(--gray-300);
  border-bottom-width: 2px;
  border-radius: var(--radius-sm);
  font-size: var(--text-xs);
  font-family: var(--font-mono);
  color: var(--text-primary);
  font-weight: 600;
  min-width: 20px;
  text-align: center;
}

.key-combination {
  display: flex;
  align-items: center;
  gap: var(--space-1);
}

.key-plus {
  color: var(--text-muted);
  font-size: var(--text-xs);
}
```

### Action Feedback
```css
/* Provide clear feedback for keyboard interactions */
.button:active,
.button[aria-pressed="true"] {
  transform: translateY(1px);
  box-shadow: var(--shadow-sm);
}

.link:active {
  color: #2c5f7a;
}

/* Loading states for async actions */
.button.loading {
  position: relative;
  color: transparent;
}

.button.loading::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 16px;
  height: 16px;
  margin: -8px 0 0 -8px;
  border: 2px solid currentColor;
  border-top-color: transparent;
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
  color: white;
}
```

## Form Accessibility

### Label Association
```css
/* Ensure all form inputs have associated labels */
.form-field {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
  margin-bottom: var(--space-4);
}

.form-label {
  font-weight: 600;
  color: var(--text-primary);
  cursor: pointer;
  font-size: var(--text-sm);
}

.form-label.required::after {
  content: " *";
  color: var(--danger);
}

/* For complex form layouts */
.form-label-inline {
  display: flex;
  align-items: center;
  gap: var(--space-2);
}

/* Hidden labels for icon-only inputs */
.form-label.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
```

### Error Handling
```css
/* Clear error indication and messaging */
.form-field.error .form-input {
  border-color: var(--danger);
  background: rgba(220, 53, 69, 0.05);
  /* aria-invalid="true" in HTML */
}

.form-field.error .form-label {
  color: var(--danger);
}

.form-error {
  color: var(--danger);
  font-size: var(--text-sm);
  display: flex;
  align-items: flex-start;
  gap: var(--space-2);
  margin-top: var(--space-2);
  /* id linked to input via aria-describedby */
}

.form-error-icon {
  width: 16px;
  height: 16px;
  flex-shrink: 0;
  margin-top: 2px;
}

/* Success states */
.form-field.valid .form-input {
  border-color: var(--success);
  background: rgba(42, 157, 143, 0.05);
  /* aria-invalid="false" in HTML */
}

.form-success {
  color: var(--success);
  font-size: var(--text-sm);
  display: flex;
  align-items: center;
  gap: var(--space-2);
  margin-top: var(--space-2);
}
```

### Form Validation States
```css
/* Real-time validation feedback */
.form-input:invalid {
  border-color: var(--danger);
  /* Don't show error styling until user has interacted */
}

.form-input:invalid:not(:focus):not(:placeholder-shown) {
  background: rgba(220, 53, 69, 0.05);
}

.form-input:valid:not(:placeholder-shown) {
  border-color: var(--success);
  background: rgba(42, 157, 143, 0.05);
}

/* Required field indicators */
.form-input:required + .form-label::after {
  content: " *";
  color: var(--danger);
}

/* Optional field indicators */
.form-input:not(:required) + .form-label::after {
  content: " (optional)";
  color: var(--text-muted);
  font-weight: normal;
  font-size: var(--text-xs);
}
```

## Touch & Mobile Accessibility

### Touch Target Sizes
```css
/* Minimum 44x44px touch targets */
.touch-target {
  min-width: 44px;
  min-height: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

/* Expand touch area for small elements */
.icon-button {
  width: 24px;
  height: 24px;
  position: relative;
}

.icon-button::before {
  content: '';
  position: absolute;
  top: -10px;
  left: -10px;
  right: -10px;
  bottom: -10px;
  /* Invisible but touchable area */
}

/* Adequate spacing between touch targets */
.button-group .button {
  margin: var(--space-2);
}

.button-group .button + .button {
  margin-left: var(--space-3);
}
```

### Mobile-Specific Considerations
```css
/* Prevent zoom on input focus (iOS) */
.form-input {
  font-size: 16px; /* Prevents zoom on iOS */
}

@media screen and (max-width: 768px) {
  .form-input {
    font-size: 16px; /* Ensure no zoom */
  }
}

/* Optimize touch interactions */
.touch-optimized {
  -webkit-tap-highlight-color: rgba(58, 124, 165, 0.2);
  user-select: none;
  touch-action: manipulation; /* Removes 300ms click delay */
}

/* Improve touch responsiveness */
.interactive-element {
  touch-action: manipulation;
  -webkit-user-select: none;
  user-select: none;
}

/* Larger touch targets on mobile */
@media (max-width: 768px) {
  .mobile-touch {
    min-height: 48px;
    padding: var(--space-3) var(--space-4);
  }
}
```

## Screen Reader Support

### Alternative Text & Descriptions
```css
/* Style decorative images appropriately */
.decorative-image {
  user-select: none;
  pointer-events: none;
  /* alt="" in HTML for decorative images */
}

/* Style informative images */
.informative-image {
  border: 2px solid transparent;
  border-radius: var(--radius-md);
  transition: border-color var(--transition-fast);
  /* Descriptive alt text in HTML */
}

.informative-image:focus {
  border-color: var(--primary);
  outline: none;
}

/* Complex images need detailed descriptions */
.complex-image {
  position: relative;
}

.image-description {
  position: absolute;
  left: -10000px;
  width: 1px;
  height: 1px;
  overflow: hidden;
  /* Referenced by aria-describedby in HTML */
}
```

### Live Regions
```css
/* Style live region announcements */
.live-region {
  position: absolute;
  left: -10000px;
  width: 1px;
  height: 1px;
  overflow: hidden;
  /* aria-live="polite" or "assertive" in HTML */
}

.status-message {
  padding: var(--space-4);
  border-radius: var(--radius-md);
  margin: var(--space-4) 0;
  /* role="status" in HTML */
}

.status-message.success {
  background: rgba(42, 157, 143, 0.1);
  border: 1px solid rgba(42, 157, 143, 0.3);
  color: #1a4f47;
}

.status-message.error {
  background: rgba(220, 53, 69, 0.1);
  border: 1px solid rgba(220, 53, 69, 0.3);
  color: #7d1a1a;
  /* role="alert" in HTML for errors */
}

.status-message.info {
  background: rgba(58, 124, 165, 0.1);
  border: 1px solid rgba(58, 124, 165, 0.3);
  color: #1e3a45;
}
```

## Motion & Animation Accessibility

### Respecting User Preferences
```css
/* Default smooth animations */
.animated-element {
  transition: all var(--transition-normal);
  animation: fadeIn var(--transition-slow) ease-out;
}

/* Respect reduced motion preferences */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
  
  /* Provide instant feedback instead of animations */
  .hover-effect:hover {
    opacity: 0.8;
    /* No transform animations */
  }
}

/* Safe animations that don't trigger vestibular disorders */
.safe-animation {
  /* Avoid: spinning, bouncing, oscillating motions */
  /* Safe: fade, slide, scale */
  opacity: 0;
  animation: safeFadeIn 0.3s ease-out forwards;
}

@keyframes safeFadeIn {
  to {
    opacity: 1;
  }
}
```

### Loading Animations
```css
/* Accessible loading indicators */
.loading-spinner {
  width: 24px;
  height: 24px;
  border: 2px solid var(--gray-300);
  border-top-color: var(--primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  /* aria-label="Loading" in HTML */
}

@media (prefers-reduced-motion: reduce) {
  .loading-spinner {
    animation: none;
    border-top-color: var(--primary);
    /* Show static loading indicator */
  }
}

/* Text-based loading for screen readers */
.loading-text {
  /* aria-live="polite" aria-label="Loading content" in HTML */
}
```

## Testing & Validation

### Accessibility Testing Utilities
```css
/* Debug mode for accessibility testing */
.a11y-debug img:not([alt]) {
  border: 3px solid red !important;
}

.a11y-debug button:not([aria-label]):not([aria-labelledby]):empty {
  background: yellow !important;
}

.a11y-debug input:not([id]):not([aria-label]):not([aria-labelledby]) {
  outline: 3px solid orange !important;
}

.a11y-debug [role]:not([aria-label]):not([aria-labelledby]) {
  background: rgba(255, 0, 255, 0.2) !important;
}

/* Focus debugging */
.a11y-debug :focus {
  outline: 3px solid lime !important;
  outline-offset: 2px !important;
}
```

## Implementation Checklist

### ✅ Every Component Must:
- [ ] Use semantic HTML elements appropriate to content
- [ ] Include proper ARIA labels and descriptions where needed
- [ ] Support keyboard navigation with visible focus indicators
- [ ] Meet WCAG AA color contrast requirements (4.5:1 normal, 3:1 large)
- [ ] Provide alternative text for all informative images
- [ ] Respect user motion preferences
- [ ] Work without JavaScript (progressive enhancement)
- [ ] Include proper form labels and error messages

### ✅ Interactive Elements Must:
- [ ] Have minimum 44x44px touch targets on mobile
- [ ] Provide clear visual feedback for all states (hover, focus, active, disabled)
- [ ] Be reachable and usable via keyboard navigation
- [ ] Include screen reader accessible names and descriptions
- [ ] Show loading states for async operations
- [ ] Handle errors gracefully with clear messaging

### ✅ Content Must:
- [ ] Follow logical heading hierarchy (h1 → h2 → h3)
- [ ] Use sufficient color contrast for all text
- [ ] Not rely solely on color to convey information
- [ ] Include skip links for main navigation
- [ ] Use landmark roles for page structure
- [ ] Provide meaningful link text ("Learn more about pricing" not "click here")

## Tools & Testing

### Recommended Testing Tools
- **axe-core**: Automated accessibility testing
- **Lighthouse**: Performance and accessibility audit  
- **WAVE**: Web accessibility evaluation
- **Color Oracle**: Color blindness simulator
- **Keyboard navigation**: Manual testing with Tab, Shift+Tab, Enter, Space, Arrow keys
- **Screen readers**: NVDA (free), JAWS, VoiceOver (macOS)

### Browser Extensions
- axe DevTools
- Lighthouse
- WAVE
- Colour Contrast Analyser
- HeadingsMap
- Landmarks

Remember: **Accessibility is not optional**. Every user deserves equal access to information and functionality, regardless of their abilities or the technology they use to access your site.