---
alwaysApply: true
---

# Component Design Patterns

Comprehensive patterns for building consistent, maintainable components that work seamlessly across both public sales pages and admin interfaces.

## Core Component Philosophy

### ðŸ§© Component Architecture
- **Surface-aware components** that adapt styling based on context (public vs admin)
- **Composable patterns** that can be combined and reused
- **Accessibility-first design** built into every component
- **Performance-optimized** with efficient CSS and minimal JavaScript

### ðŸŽ¨ Design Consistency
- **Unified design tokens** from [foundations.mdc](mdc:foundations.mdc)
- **Surface-appropriate styling** from [two-surface-design-system.mdc](mdc:two-surface-design-system.mdc)
- **Responsive behavior** that works on all devices
- **Loading and error states** for all interactive components

## Button Component Pattern

### Base Button Structure
```css
.btn {
  /* Base styles */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-2);
  padding: var(--space-3) var(--space-6);
  border: 1px solid transparent;
  border-radius: var(--radius-md);
  font-family: var(--font-sans);
  font-size: var(--text-sm);
  font-weight: 500;
  text-decoration: none;
  cursor: pointer;
  transition: all var(--transition-fast);
  min-height: 44px; /* Accessibility requirement */
  position: relative;
  overflow: hidden;
}

.btn:focus-visible {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
}

.btn:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  pointer-events: none;
}
```

### Surface-Specific Button Variants
```css
/* Public sales page buttons */
.btn[data-surface="public"] {
  padding: var(--space-4) var(--space-8);
  font-size: var(--text-lg);
  font-weight: 600;
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-md);
  transform: translateY(0);
}

.btn[data-surface="public"]:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
}

.btn[data-surface="public"]:active {
  transform: translateY(0);
  transition-duration: 0.1s;
}

/* Admin panel buttons */
.btn[data-surface="admin"] {
  padding: var(--space-3) var(--space-5);
  font-size: var(--text-sm);
  font-weight: 500;
  border-radius: var(--radius-md);
  box-shadow: none;
}

.btn[data-surface="admin"]:hover {
  opacity: 0.9;
}
```

### Button Type Variants
```css
/* Primary buttons */
.btn--primary {
  background: var(--primary);
  color: white;
  border-color: var(--primary);
}

.btn--primary:hover {
  background: #2c5f7a;
  border-color: #2c5f7a;
}

.btn--primary[data-surface="public"] {
  background: linear-gradient(135deg, var(--accent), #d32f2f);
  border-color: var(--accent);
}

.btn--primary[data-surface="public"]:hover {
  background: linear-gradient(135deg, #d32f2f, #b71c1c);
}

/* Secondary buttons */
.btn--secondary {
  background: var(--white);
  color: var(--text-primary);
  border-color: var(--gray-300);
}

.btn--secondary:hover {
  background: var(--gray-50);
  border-color: var(--gray-400);
}

/* Ghost buttons */
.btn--ghost {
  background: transparent;
  color: var(--primary);
  border-color: transparent;
}

.btn--ghost:hover {
  background: rgba(58, 124, 165, 0.1);
}

/* Danger buttons */
.btn--danger {
  background: var(--danger);
  color: white;
  border-color: var(--danger);
}

.btn--danger:hover {
  background: #c82333;
  border-color: #c82333;
}
```

### Button Size Variants
```css
.btn--sm {
  padding: var(--space-2) var(--space-4);
  font-size: var(--text-xs);
  min-height: 32px;
}

.btn--lg {
  padding: var(--space-4) var(--space-8);
  font-size: var(--text-lg);
  min-height: 52px;
}

.btn--xl {
  padding: var(--space-5) var(--space-10);
  font-size: var(--text-xl);
  min-height: 60px;
}
```

### Button States
```css
.btn--loading {
  color: transparent;
  pointer-events: none;
}

.btn--loading::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 16px;
  height: 16px;
  margin: -8px 0 0 -8px;
  border: 2px solid currentColor;
  border-top-color: transparent;
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
  color: inherit;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}
```

## Card Component Pattern

### Base Card Structure
```css
.card {
  background: var(--white);
  border: 1px solid var(--gray-200);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-sm);
  overflow: hidden;
  transition: all var(--transition-normal);
  position: relative;
}

.card:hover {
  box-shadow: var(--shadow-md);
}

.card[data-surface="public"] {
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow-md);
}

.card[data-surface="public"]:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-xl);
}

.card[data-surface="admin"] {
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-sm);
}

.card[data-surface="admin"]:hover {
  border-color: var(--gray-300);
}
```

### Card Layout Components
```css
.card__header {
  padding: var(--space-6);
  border-bottom: 1px solid var(--gray-100);
  background: var(--gray-50);
}

.card__title {
  margin: 0;
  font-family: var(--font-serif);
  font-size: var(--text-xl);
  font-weight: 600;
  color: var(--text-primary);
}

.card__subtitle {
  margin: var(--space-1) 0 0;
  font-size: var(--text-sm);
  color: var(--text-muted);
}

.card__body {
  padding: var(--space-6);
}

.card__content {
  color: var(--text-secondary);
  line-height: 1.6;
}

.card__footer {
  padding: var(--space-4) var(--space-6);
  border-top: 1px solid var(--gray-100);
  background: var(--gray-50);
  display: flex;
  justify-content: flex-end;
  gap: var(--space-3);
}
```

### Card Variants
```css
/* Featured cards */
.card--featured {
  border: 2px solid var(--accent);
  position: relative;
}

.card--featured::before {
  content: 'Featured';
  position: absolute;
  top: -1px;
  right: var(--space-6);
  background: var(--accent);
  color: white;
  padding: var(--space-1) var(--space-3);
  font-size: var(--text-xs);
  font-weight: 600;
  border-radius: 0 0 var(--radius-md) var(--radius-md);
}

/* Clickable cards */
.card--clickable {
  cursor: pointer;
  user-select: none;
}

.card--clickable:focus-visible {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
}

/* Empty state cards */
.card--empty {
  padding: var(--space-12);
  text-align: center;
  color: var(--text-muted);
}

.card--empty-icon {
  width: 60px;
  height: 60px;
  margin: 0 auto var(--space-4);
  opacity: 0.5;
}
```

## Form Component Patterns

### Input Field Pattern
```css
.form-field {
  margin-bottom: var(--space-6);
  position: relative;
}

.form-label {
  display: block;
  font-size: var(--text-sm);
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: var(--space-2);
  cursor: pointer;
}

.form-label--required::after {
  content: ' *';
  color: var(--danger);
}

.form-input {
  width: 100%;
  padding: var(--space-3) var(--space-4);
  border: 1px solid var(--gray-300);
  border-radius: var(--radius-md);
  font-family: var(--font-sans);
  font-size: var(--text-base);
  color: var(--text-primary);
  background: var(--white);
  transition: all var(--transition-fast);
  min-height: 44px; /* Touch target */
}

.form-input:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(58, 124, 165, 0.1);
}

.form-input:disabled {
  background: var(--gray-100);
  color: var(--text-muted);
  cursor: not-allowed;
}

.form-input--error {
  border-color: var(--danger);
  box-shadow: 0 0 0 3px rgba(220, 53, 69, 0.1);
}

.form-input--success {
  border-color: var(--success);
  box-shadow: 0 0 0 3px rgba(42, 157, 143, 0.1);
}
```

### Form Feedback Pattern
```css
.form-help {
  font-size: var(--text-sm);
  color: var(--text-muted);
  margin-top: var(--space-2);
  line-height: 1.4;
}

.form-error {
  font-size: var(--text-sm);
  color: var(--danger);
  margin-top: var(--space-2);
  display: flex;
  align-items: center;
  gap: var(--space-2);
}

.form-error-icon {
  width: 16px;
  height: 16px;
  flex-shrink: 0;
}

.form-success {
  font-size: var(--text-sm);
  color: var(--success);
  margin-top: var(--space-2);
  display: flex;
  align-items: center;
  gap: var(--space-2);
}
```

## Modal Component Pattern

### Modal Structure
```css
.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  visibility: hidden;
  transition: all var(--transition-normal);
}

.modal.active {
  opacity: 1;
  visibility: visible;
}

.modal__backdrop {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(4px);
}

.modal__content {
  position: relative;
  background: var(--white);
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow-2xl);
  max-width: 90vw;
  max-height: 90vh;
  overflow-y: auto;
  transform: scale(0.9);
  transition: transform var(--transition-normal);
}

.modal.active .modal__content {
  transform: scale(1);
}
```

### Modal Layout
```css
.modal__header {
  padding: var(--space-6);
  border-bottom: 1px solid var(--gray-200);
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.modal__title {
  margin: 0;
  font-family: var(--font-serif);
  font-size: var(--text-xl);
  font-weight: 600;
  color: var(--text-primary);
}

.modal__close {
  background: none;
  border: none;
  padding: var(--space-2);
  cursor: pointer;
  border-radius: var(--radius-md);
  color: var(--text-muted);
  transition: all var(--transition-fast);
}

.modal__close:hover {
  background: var(--gray-100);
  color: var(--text-primary);
}

.modal__body {
  padding: var(--space-6);
}

.modal__footer {
  padding: var(--space-4) var(--space-6);
  border-top: 1px solid var(--gray-200);
  display: flex;
  justify-content: flex-end;
  gap: var(--space-3);
}
```

## Navigation Component Patterns

### Primary Navigation
```css
.nav {
  background: var(--white);
  border-bottom: 1px solid var(--gray-200);
  position: sticky;
  top: 0;
  z-index: 100;
}

.nav__container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 var(--space-6);
  display: flex;
  align-items: center;
  justify-content: space-between;
  min-height: 64px;
}

.nav__brand {
  font-family: var(--font-serif);
  font-size: var(--text-xl);
  font-weight: 700;
  color: var(--text-primary);
  text-decoration: none;
}

.nav__menu {
  display: flex;
  align-items: center;
  gap: var(--space-6);
  list-style: none;
  margin: 0;
  padding: 0;
}

.nav__link {
  color: var(--text-secondary);
  text-decoration: none;
  font-weight: 500;
  font-size: var(--text-sm);
  padding: var(--space-2) var(--space-3);
  border-radius: var(--radius-md);
  transition: all var(--transition-fast);
  position: relative;
}

.nav__link:hover {
  color: var(--primary);
  background: rgba(58, 124, 165, 0.1);
}

.nav__link.active {
  color: var(--primary);
  font-weight: 600;
}

.nav__link.active::after {
  content: '';
  position: absolute;
  bottom: -8px;
  left: 50%;
  transform: translateX(-50%);
  width: 20px;
  height: 2px;
  background: var(--primary);
  border-radius: var(--radius-full);
}
```

### Sidebar Navigation
```css
.sidebar {
  width: 250px;
  background: var(--white);
  border-right: 1px solid var(--gray-200);
  padding: var(--space-6);
  height: 100vh;
  overflow-y: auto;
  position: fixed;
  left: 0;
  top: 0;
  z-index: 50;
}

.sidebar__menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

.sidebar__item {
  margin-bottom: var(--space-1);
}

.sidebar__link {
  display: flex;
  align-items: center;
  gap: var(--space-3);
  padding: var(--space-3) var(--space-4);
  color: var(--text-secondary);
  text-decoration: none;
  border-radius: var(--radius-md);
  font-size: var(--text-sm);
  font-weight: 500;
  transition: all var(--transition-fast);
  position: relative;
}

.sidebar__link:hover {
  background: var(--gray-100);
  color: var(--text-primary);
}

.sidebar__link.active {
  background: rgba(58, 124, 165, 0.1);
  color: var(--primary);
  font-weight: 600;
}

.sidebar__link.active::before {
  content: '';
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  width: 3px;
  height: 20px;
  background: var(--primary);
  border-radius: 0 2px 2px 0;
}

.sidebar__icon {
  width: 18px;
  height: 18px;
  flex-shrink: 0;
}
```

## Loading State Patterns

### Skeleton Loading
```css
.skeleton {
  background: linear-gradient(
    90deg,
    var(--gray-200) 0%,
    var(--gray-300) 50%,
    var(--gray-200) 100%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
  border-radius: var(--radius-md);
}

.skeleton--text {
  height: 1rem;
  margin-bottom: var(--space-2);
}

.skeleton--heading {
  height: 1.5rem;
  width: 70%;
  margin-bottom: var(--space-4);
}

.skeleton--paragraph {
  height: 1rem;
  margin-bottom: var(--space-2);
}

.skeleton--paragraph:last-child {
  width: 60%;
}

.skeleton--button {
  height: 44px;
  width: 120px;
  border-radius: var(--radius-md);
}

.skeleton--avatar {
  width: 40px;
  height: 40px;
  border-radius: 50%;
}

.skeleton--card {
  height: 200px;
  border-radius: var(--radius-lg);
}

@keyframes shimmer {
  0% { background-position: -200% 0; }
  100% { background-position: 200% 0; }
}
```

### Spinner Loading
```css
.spinner {
  width: 24px;
  height: 24px;
  border: 2px solid var(--gray-300);
  border-top-color: var(--primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.spinner--sm {
  width: 16px;
  height: 16px;
  border-width: 1px;
}

.spinner--lg {
  width: 32px;
  height: 32px;
  border-width: 3px;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Respect reduced motion preferences */
@media (prefers-reduced-motion: reduce) {
  .spinner {
    animation: none;
    border-top-color: var(--primary);
    opacity: 0.8;
  }
}
```

## Responsive Component Patterns

### Mobile-First Components
```css
.component {
  /* Mobile styles first */
  padding: var(--space-4);
  font-size: var(--text-sm);
}

@media (min-width: 768px) {
  .component {
    /* Tablet styles */
    padding: var(--space-6);
    font-size: var(--text-base);
  }
}

@media (min-width: 1024px) {
  .component {
    /* Desktop styles */
    padding: var(--space-8);
    font-size: var(--text-lg);
  }
}
```

### Container Queries (Future)
```css
/* When container queries are widely supported */
.component {
  container-type: inline-size;
}

@container (min-width: 400px) {
  .component__content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--space-4);
  }
}
```

## Component State Management

### CSS-Only State Management
```css
/* Checkbox-based toggles */
.toggle {
  position: relative;
}

.toggle__input {
  position: absolute;
  opacity: 0;
  pointer-events: none;
}

.toggle__content {
  max-height: 0;
  overflow: hidden;
  transition: max-height var(--transition-normal);
}

.toggle__input:checked + .toggle__content {
  max-height: 500px; /* Adjust based on content */
}

/* Radio-based tabs */
.tabs__input {
  position: absolute;
  opacity: 0;
  pointer-events: none;
}

.tabs__panel {
  display: none;
}

.tabs__input:checked + .tabs__panel {
  display: block;
}
```

## Implementation Guidelines

### Component File Structure
```
components/
  Button/
    Button.jsx
    Button.module.css
    Button.stories.js
    Button.test.js
  Card/
    Card.jsx
    Card.module.css
    index.js
  Modal/
    Modal.jsx
    Modal.module.css
    useModal.js
```

### Component Props Pattern
```javascript
// Surface-aware component example
const Button = ({ 
  children, 
  surface = 'admin', // Default to admin
  variant = 'primary',
  size = 'md',
  loading = false,
  disabled = false,
  ...props 
}) => {
  return (
    <button 
      className={`btn btn--${variant} btn--${size}`}
      data-surface={surface}
      disabled={disabled || loading}
      {...props}
    >
      {loading ? <Spinner /> : children}
    </button>
  );
};
```

### Quality Checklist

#### âœ… Every Component Should:
- [ ] Support both public and admin surfaces
- [ ] Include proper accessibility attributes
- [ ] Handle loading and error states
- [ ] Be responsive across all screen sizes
- [ ] Follow the established design token system
- [ ] Include focus management for keyboard navigation
- [ ] Respect user motion preferences
- [ ] Have consistent naming and structure

#### âœ… Interactive Components Should:
- [ ] Have minimum 44px touch targets
- [ ] Provide clear visual feedback for all states
- [ ] Support keyboard navigation
- [ ] Include proper ARIA labels and roles
- [ ] Handle disabled states appropriately
- [ ] Show loading states for async operations

Remember: **Components are the building blocks of great user experiences**. Invest time in creating robust, flexible patterns that can be reused confidently across your entire application.